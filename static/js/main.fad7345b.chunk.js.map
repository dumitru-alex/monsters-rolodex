{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","mode","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qVAGaA,G,MAAO,SAAAC,GAAK,OACrB,yBAAKC,UAAU,kBACX,yBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,gCAAML,EAAMI,QAAQE,KAApB,KACA,+BAAKN,EAAMI,QAAQG,MAAnB,QCNKC,G,MAAW,SAACR,GAAD,OACpB,yBAAKC,UAAU,aACVD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,UCJ/BQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,2BACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0CHG,G,kBA3CX,aAAe,IAAD,8BACV,+CAoBJH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBtC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IALP,E,iFAWO,IAAD,OAChBI,MAAM,6CAA8C,CAACC,KAAM,YACtDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEV,SAAUoB,S,+BAWvC,IAAD,EAC6BC,KAAKP,MAA/Bd,EADH,EACGA,SAAUW,EADb,EACaA,YACZW,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYa,kBAEpD,OACI,yBAAKhC,UAAU,OACX,gDACA,kBAAC,EAAD,CACIY,YAAY,kBACZC,aAAcgB,KAAKhB,eAEvB,kBAAC,EAAD,CAAUL,SAAUsB,S,GAtClBI,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fad7345b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n);","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n","import React from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: \"\"\n        };\n        // See: https://reactjs.org/docs/handling-events.html\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\", {mode: \"no-cors\"})\n            .then(response => response.json())\n            .then(users => this.setState({ monsters: users }));\n    }\n\n    /**\n     * Method that takes an event and sets the searchField state to the value from input\n     * @param {*} e synthetic event\n     */\n    handleChange = e => {\n        this.setState({ searchField: e.target.value });\n    };\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"search monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}